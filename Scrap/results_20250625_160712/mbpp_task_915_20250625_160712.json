{
  "mbpp_id": 915,
  "problem": {
    "task_id": 915,
    "text": "Write a function to rearrange positive and negative numbers in a given array using lambda function.",
    "code": "def rearrange_numbs(array_nums):\r\n  result = sorted(array_nums, key = lambda i: 0 if i == 0 else -1 / i)\r\n  return result ",
    "test_list": [
      "assert rearrange_numbs([-1, 2, -3, 5, 7, 8, 9, -10])==[2, 5, 7, 8, 9, -10, -3, -1]",
      "assert rearrange_numbs([10,15,14,13,-18,12,-20])==[10, 12, 13, 14, 15, -20, -18]",
      "assert rearrange_numbs([-20,20,-10,10,-30,30])==[10, 20, 30, -30, -20, -10]"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to rearrange positive and negative numbers in a given array using lambda function.\n\nTask ID: 915\n\nExpected behavior (test cases):\n1. rearrange_numbs([-1, 2, -3, 5, 7, 8, 9, -10])==[2, 5, 7, 8, 9, -10, -3, -1]\n2. rearrange_numbs([10,15,14,13,-18,12,-20])==[10, 12, 13, 14, 15, -20, -18]\n3. rearrange_numbs([-20,20,-10,10,-30,30])==[10, 20, 30, -30, -20, -10]\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-dc3b10bc10c543428219cce25797ae3d",
    "object": "chat.completion",
    "created": 1750868454,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef rearrange_numbs(arr):\n    # Use list comprehension with lambda functions to separate positive and negative numbers\n    return [x for x in arr if x > 0] + [x for x in arr if x < 0]\n\n# Test cases\nprint(rearrange_numbs([-1, 2, -3, 5, 7, 8, 9, -10]))  # Expected output: [2, 5, 7, 8, 9, -10, -3, -1]\nprint(rearrange_numbs([10,15,14,13,-18,12,-20]))      # Expected output: [10, 12, 13, 14, 15, -20, -18]\nprint(rearrange_numbs([-20,20,-10,10,-30,30]))        # Expected output: [10, 20, 30, -30, -20, -10]\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 254,
      "total_tokens": 488,
      "completion_tokens": 234,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868458.0082526
}