{
  "mbpp_id": 872,
  "problem": {
    "task_id": 872,
    "text": "Write a function to check if a nested list is a subset of another nested list.",
    "code": "def check_subset(list1,list2): \r\n    return all(map(list1.__contains__,list2)) ",
    "test_list": [
      "assert check_subset([[1, 3], [5, 7], [9, 11], [13, 15, 17]] ,[[1, 3],[13,15,17]])==True",
      "assert check_subset([[1, 2], [2, 3], [3, 4], [5, 6]],[[3, 4], [5, 6]])==True",
      "assert check_subset([[[1, 2], [2, 3]], [[3, 4], [5, 7]]],[[[3, 4], [5, 6]]])==False"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to check if a nested list is a subset of another nested list.\n\nTask ID: 872\n\nExpected behavior (test cases):\n1. check_subset([[1, 3], [5, 7], [9, 11], [13, 15, 17]] ,[[1, 3],[13,15,17]])==True\n2. check_subset([[1, 2], [2, 3], [3, 4], [5, 6]],[[3, 4], [5, 6]])==True\n3. check_subset([[[1, 2], [2, 3]], [[3, 4], [5, 7]]],[[[3, 4], [5, 6]]])==False\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-7d8420a533544cae86dc0cb42bc02901",
    "object": "chat.completion",
    "created": 1750868340,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef check_subset(nested_list1, nested_list2):\n    for sublist in nested_list1:\n        found = False\n        for subsublist in nested_list2:\n            if set(sublist).issubset(set(subsublist)):\n                found = True\n                break\n        if not found:\n            return False\n    return True\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 235,
      "total_tokens": 310,
      "completion_tokens": 75,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868341.9136825
}