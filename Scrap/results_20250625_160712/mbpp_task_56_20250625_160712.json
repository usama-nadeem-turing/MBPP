{
  "mbpp_id": 56,
  "problem": {
    "task_id": 56,
    "text": "Write a python function to check if a given number is one less than twice its reverse.",
    "code": "def rev(num):    \r\n    rev_num = 0\r\n    while (num > 0):  \r\n        rev_num = (rev_num * 10 + num % 10) \r\n        num = num // 10  \r\n    return rev_num  \r\ndef check(n):    \r\n    return (2 * rev(n) == n + 1)  ",
    "test_list": [
      "assert check(70) == False",
      "assert check(23) == False",
      "assert check(73) == True"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a python function to check if a given number is one less than twice its reverse.\n\nTask ID: 56\n\nExpected behavior (test cases):\n1. check(70) should return False\n2. check(23) should return False\n3. check(73) should return True\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-e77703b55f944f6589d8fc2100836967",
    "object": "chat.completion",
    "created": 1750868723,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef check(num):\n    # Reverse the number\n    reversed_num = int(str(num)[::-1])\n    \n    # Check if num is one less than twice its reverse\n    return num == 2 * reversed_num - 1\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 125,
      "total_tokens": 178,
      "completion_tokens": 53,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868724.8460162
}