{
  "mbpp_id": 779,
  "problem": {
    "task_id": 779,
    "text": "Write a function to count the number of unique lists within a list.",
    "code": "def unique_sublists(list1):\r\n    result ={}\r\n    for l in list1: \r\n        result.setdefault(tuple(l), list()).append(1) \r\n    for a, b in result.items(): \r\n        result[a] = sum(b)\r\n    return result",
    "test_list": [
      "assert unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]])=={(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}",
      "assert unique_sublists([['green', 'orange'], ['black'], ['green', 'orange'], ['white']])=={('green', 'orange'): 2, ('black',): 1, ('white',): 1}",
      "assert unique_sublists([[1, 2], [3, 4], [4, 5], [6, 7]])=={(1, 2): 1, (3, 4): 1, (4, 5): 1, (6, 7): 1}"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to count the number of unique lists within a list.\n\nTask ID: 779\n\nExpected behavior (test cases):\n1. unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]])=={(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\n2. unique_sublists([['green', 'orange'], ['black'], ['green', 'orange'], ['white']])=={('green', 'orange'): 2, ('black',): 1, ('white',): 1}\n3. unique_sublists([[1, 2], [3, 4], [4, 5], [6, 7]])=={(1, 2): 1, (3, 4): 1, (4, 5): 1, (6, 7): 1}\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-7b8d8f4d42c340feaede88266390d946",
    "object": "chat.completion",
    "created": 1750868095,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef unique_sublists(lst):\n    from collections import defaultdict\n    \n    # Dictionary to store sublists as keys and their counts as values\n    result = defaultdict(int)\n    \n    for sublist in lst:\n        # Convert each sublist into a tuple before adding it to the dictionary\n        result[tuple(sublist)] += 1\n    \n    return dict(result)\n\n# Test cases\nprint(unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]]))  # {(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\nprint(unique_sublists([['green', 'orange'], ['black'], ['green', 'orange'], ['white']]))  # {('green', 'orange'): 2, ('black',): 1, ('white',): 1}\nprint(unique_sublists([[1, 2], [3, 4], [4, 5], [6, 7]]))  # {(1, 2): 1, (3, 4): 1, (4, 5): 1, (6, 7): 1}\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 296,
      "total_tokens": 586,
      "completion_tokens": 290,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868100.5011759
}