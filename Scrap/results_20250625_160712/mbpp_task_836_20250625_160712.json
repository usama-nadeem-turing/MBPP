{
  "mbpp_id": 836,
  "problem": {
    "task_id": 836,
    "text": "Write a function to find length of the subarray having maximum sum.",
    "code": "from sys import maxsize \r\ndef max_sub_array_sum(a,size): \r\n\tmax_so_far = -maxsize - 1\r\n\tmax_ending_here = 0\r\n\tstart = 0\r\n\tend = 0\r\n\ts = 0\r\n\tfor i in range(0,size): \r\n\t\tmax_ending_here += a[i] \r\n\t\tif max_so_far < max_ending_here: \r\n\t\t\tmax_so_far = max_ending_here \r\n\t\t\tstart = s \r\n\t\t\tend = i \r\n\t\tif max_ending_here < 0: \r\n\t\t\tmax_ending_here = 0\r\n\t\t\ts = i+1\r\n\treturn (end - start + 1)",
    "test_list": [
      "assert max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3],8) == 5",
      "assert max_sub_array_sum([1, -2, 1, 1, -2, 1],6) == 2",
      "assert max_sub_array_sum([-1, -2, 3, 4, 5],5) == 3"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to find length of the subarray having maximum sum.\n\nTask ID: 836\n\nExpected behavior (test cases):\n1. max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3],8) should return 5\n2. max_sub_array_sum([1, -2, 1, 1, -2, 1],6) should return 2\n3. max_sub_array_sum([-1, -2, 3, 4, 5],5) should return 3\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-da0fff56e61c4c3b8a6570d5cb2f476e",
    "object": "chat.completion",
    "created": 1750868240,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef max_sub_array_sum(arr):\n    current_sum = max_sum = arr[0]\n    for num in arr[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum\n\n# Test cases\nprint(max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3]))  # Expected output: 5\nprint(max_sub_array_sum([1, -2, 1, 1, -2, 1]))  # Expected output: 2\nprint(max_sub_array_sum([-1, -2, 3, 4, 5]))  # Expected output: 3\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 185,
      "total_tokens": 344,
      "completion_tokens": 159,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868243.123744
}