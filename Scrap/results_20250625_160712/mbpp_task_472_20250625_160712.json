{
  "mbpp_id": 472,
  "problem": {
    "task_id": 472,
    "text": "Write a python function to check whether the given list contains consecutive numbers or not.",
    "code": "def check_Consecutive(l): \r\n    return sorted(l) == list(range(min(l),max(l)+1)) ",
    "test_list": [
      "assert check_Consecutive([1,2,3,4,5]) == True",
      "assert check_Consecutive([1,2,3,5,6]) == False",
      "assert check_Consecutive([1,2,1]) == False"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a python function to check whether the given list contains consecutive numbers or not.\n\nTask ID: 472\n\nExpected behavior (test cases):\n1. check_Consecutive([1,2,3,4,5]) should return True\n2. check_Consecutive([1,2,3,5,6]) should return False\n3. check_Consecutive([1,2,1]) should return False\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-f8150c6ad03c4f9eaf89269e18da7aba",
    "object": "chat.completion",
    "created": 1750869783,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef check_Consecutive(nums):\n    # Check if all elements in the list are consecutive integers\n    return len(set(nums)) == len(nums) and max(nums) - min(nums) + 1 == len(nums)\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 147,
      "total_tokens": 196,
      "completion_tokens": 49,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750869784.6345613
}