{
  "mbpp_id": 108,
  "problem": {
    "task_id": 108,
    "text": "Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.",
    "code": "import heapq\r\ndef merge_sorted_list(num1,num2,num3):\r\n  num1=sorted(num1)\r\n  num2=sorted(num2)\r\n  num3=sorted(num3)\r\n  result = heapq.merge(num1,num2,num3)\r\n  return list(result)",
    "test_list": [
      "assert merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]",
      "assert merge_sorted_list([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12])==[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]",
      "assert merge_sorted_list([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1],[25, 35, 22, 85, 14, 65, 75, 25, 58],[12, 74, 9, 50, 61, 41])==[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.\n\nTask ID: 108\n\nExpected behavior (test cases):\n1. merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n2. merge_sorted_list([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12])==[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]\n3. merge_sorted_list([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1],[25, 35, 22, 85, 14, 65, 75, 25, 58],[12, 74, 9, 50, 61, 41])==[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-879774d0019840208907a6e52c64cc27",
    "object": "chat.completion",
    "created": 1750868849,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\nfrom heapq import heappush, heappop\n\ndef merge_sorted_list(sorted_lists):\n    \"\"\"\n    Merge multiple sorted lists into a single sorted list.\n    \n    :param sorted_lists: List of sorted lists.\n    :return: A merged and sorted list from all input lists.\n    \"\"\"\n    result = []\n    for lst in sorted_lists:\n        heappush(result, lst.pop(0))\n    return result + merge_sorted_list(sorted_lists)\n\n# Test cases\nprint(merge_sorted_list([[25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48]])) # Expected output: [4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 48, 54, 56, 110, 154, 233]\nprint(merge_sorted_list([[1, 3, 5, 6, 8, 9],[2, 5, 7, 11],[1, 4, 7, 8, 12]])) # Expected output: [1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]\nprint(merge_sorted_list([[18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1],[25, 35, 22, 85, 14, 65, 75, 25, 58],[12, 74, 9, 50, 61, 41]])) # Expected output: [1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25,",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "length",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 534,
      "total_tokens": 1046,
      "completion_tokens": 512,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868858.6944525
}