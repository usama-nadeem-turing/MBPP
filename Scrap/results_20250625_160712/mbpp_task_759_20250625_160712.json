{
  "mbpp_id": 759,
  "problem": {
    "task_id": 759,
    "text": "Write a function to check a decimal with a precision of 2.",
    "code": "def is_decimal(num):\r\n    import re\r\n    dnumre = re.compile(r\"\"\"^[0-9]+(\\.[0-9]{1,2})?$\"\"\")\r\n    result = dnumre.search(num)\r\n    return bool(result)",
    "test_list": [
      "assert is_decimal('123.11')==True",
      "assert is_decimal('e666.86')==False",
      "assert is_decimal('3.124587')==False"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to check a decimal with a precision of 2.\n\nTask ID: 759\n\nExpected behavior (test cases):\n1. is_decimal('123.11')==True\n2. is_decimal('e666.86')==False\n3. is_decimal('3.124587')==False\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-50e07f31bd43430b920e19a9edc9cec6",
    "object": "chat.completion",
    "created": 1750868044,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\nimport re\n\ndef is_decimal(decimal_str):\n    \"\"\"\n    Check if the given string represents a valid decimal number with exactly two digits after the decimal point.\n    \n    Args:\n    decimal_str (str): The string to be checked.\n    \n    Returns:\n    bool: True if the string matches the criteria, False otherwise.\n    \"\"\"\n    # Regular expression to match a decimal number with exactly two digits after the decimal point\n    pattern = r'^-?\\d+(\\.\\d{2})?$'\n    return bool(re.match(pattern, decimal_str))\n\n# Test cases\nprint(is_decimal('123.11'))   # Expected output: True\nprint(is_decimal('e666.86'))  # Expected output: False\nprint(is_decimal('3.124587')) # Expected output: False\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 134,
      "total_tokens": 310,
      "completion_tokens": 176,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868047.4040375
}