{
  "mbpp_id": 92,
  "problem": {
    "task_id": 92,
    "text": "Write a function to check whether the given number is undulating or not.",
    "code": "def is_undulating(n): \r\n\tif (len(n) <= 2): \r\n\t\treturn False\r\n\tfor i in range(2, len(n)): \r\n\t\tif (n[i - 2] != n[i]): \r\n\t\t\treturn False\r\n\treturn True",
    "test_list": [
      "assert is_undulating(\"1212121\") == True",
      "assert is_undulating(\"1991\") == False",
      "assert is_undulating(\"121\") == True"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to check whether the given number is undulating or not.\n\nTask ID: 92\n\nExpected behavior (test cases):\n1. is_undulating(\"1212121\") should return True\n2. is_undulating(\"1991\") should return False\n3. is_undulating(\"121\") should return True\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-bea042d69dc14183afb624c9ad855fd0",
    "object": "chat.completion",
    "created": 1750868812,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef is_undulating(num_str):\n    \"\"\"\n    Check if the given string representation of a number is undulating.\n    \n    An undulating number has digits in an alternating pattern of increasing and decreasing order.\n    For example:\n    - \"1212121\" is undulating because it alternates between 1 and 2.\n    - \"1991\" is not undulating as there's no clear alternating pattern.\n    - \"121\" is undulating because it alternates between 1 and 2.\n    \n    Parameters:\n    num_str (str): The string representation of the number to be checked.\n    \n    Returns:\n    bool: True if the number is undulating, False otherwise.\n    \"\"\"\n    for i in range(1, len(num_str) - 1):\n        if abs(int(num_str[i]) - int(num_str[i-1])) != 1:\n            return False\n    return True\n\n# Test cases\nprint(is_undulating(\"1212121\"))  # Expected output: True\nprint(is_undulating(\"1991\"))     # Expected output: False\nprint(is_undulating(\"121\"))      # Expected output: True\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 139,
      "total_tokens": 400,
      "completion_tokens": 261,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868816.610556
}