{
  "mbpp_id": 895,
  "problem": {
    "task_id": 895,
    "text": "Write a function to find the maximum sum of subsequences of given array with no adjacent elements.",
    "code": "def max_sum_subseq(A):\r\n    n = len(A)\r\n    if n == 1:\r\n        return A[0]\r\n    look_up = [None] * n\r\n    look_up[0] = A[0]\r\n    look_up[1] = max(A[0], A[1])\r\n    for i in range(2, n):\r\n        look_up[i] = max(look_up[i - 1], look_up[i - 2] + A[i])\r\n        look_up[i] = max(look_up[i], A[i])\r\n    return look_up[n - 1]",
    "test_list": [
      "assert max_sum_subseq([1, 2, 9, 4, 5, 0, 4, 11, 6]) == 26",
      "assert max_sum_subseq([1, 2, 9, 5, 6, 0, 5, 12, 7]) == 28",
      "assert max_sum_subseq([1, 3, 10, 5, 6, 0, 6, 14, 21]) == 44"
    ],
    "test_setup_code": "",
    "challenge_test_list": []
  },
  "prompt": "Please solve the following Python programming problem:\n\nProblem: Write a function to find the maximum sum of subsequences of given array with no adjacent elements.\n\nTask ID: 895\n\nExpected behavior (test cases):\n1. max_sum_subseq([1, 2, 9, 4, 5, 0, 4, 11, 6]) should return 26\n2. max_sum_subseq([1, 2, 9, 5, 6, 0, 5, 12, 7]) should return 28\n3. max_sum_subseq([1, 3, 10, 5, 6, 0, 6, 14, 21]) should return 44\n\n\nPlease provide a complete Python function that solves this problem. Write only the function code without any explanations or comments.",
  "model_response": {
    "id": "chatcmpl-294ac912c12f4059b24dc0406b041b23",
    "object": "chat.completion",
    "created": 1750868392,
    "model": "Qwen/Qwen2.5-1.5B-Instruct",
    "choices": [
      {
        "index": 0,
        "message": {
          "role": "assistant",
          "reasoning_content": null,
          "content": "```python\ndef max_sum_subseq(arr):\n    if not arr:\n        return 0\n    \n    n = len(arr)\n    incl = 0\n    excl = 0\n    \n    for i in range(n):\n        new_excl = max(incl, excl)\n        incl = excl + arr[i]\n        excl = new_excl\n    \n    return max(incl, excl)\n\n# Test cases\nprint(max_sum_subseq([1, 2, 9, 4, 5, 0, 4, 11, 6]))  # Expected output: 26\nprint(max_sum_subseq([1, 2, 9, 5, 6, 0, 5, 12, 7]))  # Expected output: 28\nprint(max_sum_subseq([1, 3, 10, 5, 6, 0, 6, 14, 21]))  # Expected output: 44\n```",
          "tool_calls": []
        },
        "logprobs": null,
        "finish_reason": "stop",
        "stop_reason": null
      }
    ],
    "usage": {
      "prompt_tokens": 216,
      "total_tokens": 429,
      "completion_tokens": 213,
      "prompt_tokens_details": null
    },
    "prompt_logprobs": null
  },
  "timestamp": 1750868396.047585
}